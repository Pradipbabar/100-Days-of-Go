pipeline {
    agent any

    stages {
        stage('Checkout Code') {
            steps {
                checkout scm
            }
        }

        stage('Build and Push Docker Images') {
            steps {
                script {
                    withCredentials([[$class: 'UsernamePasswordMultiBinding', credentialsId: DOCKER_HUB_CREDENTIALS, usernameVariable: 'DOCKER_USERNAME', passwordVariable: 'DOCKER_PASSWORD']]) {
                        sh 'docker-compose build --build-arg BACKEND_NAME=pradipbabar/goapp-backend --build-arg BACKEND_TAG=latest --build-arg FRONTEND_NAME=pradipbabar/goapp-frontend --build-arg FRONTEND_TAG=latest'
                        sh 'docker login -u $DOCKER_USERNAME -p $DOCKER_PASSWORD'
                        sh 'docker-compose push'
                        sh 'docker-compose rmi all'
                    }
                }
            }
        }

        stage('Deploy to Kubernetes') {
            steps {
                script {
                    withCredentials([[$class: 'SecretText', credentialsId: 'kubeconfig-credentials-id', secretVariable: 'KUBECONFIG']]) {
                        writeFile file: 'kubeconfig', text: KUBECONFIG
                        sh 'kubectl apply -f Kubernetes/deployment.yaml -f Kubernetes/service.yaml --kubeconfig=kubeconfig'
                    }
                }
            }
        }
    }
}
